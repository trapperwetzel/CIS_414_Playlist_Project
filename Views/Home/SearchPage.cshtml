<head>
    <link rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />
</head>

@{
    ViewData["Title"] = "MainPage";
}

@model SearchViewModel

<div class="mainSearchBody">
    <div class="search-section animate__animated animate__fadeInDown">
        <h2 id = "moodsTitleText"> Moods</h2>

        <form asp-action="Search" method="post" class="search-form mb-4">
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <label asp-for="SearchTerm" class="form-label">Search Term</label>
                        <input asp-for="SearchTerm" class="form-control" placeholder="Enter song or artist name...">
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label asp-for="Genre" class="form-label">Genre</label>
                        <select asp-for="Genre" class="form-control">
                            <option value="">-- Select Genre --</option>
                            @foreach (var genre in Model.AvailableGenres)
                            {
                                <option value="@genre">@genre</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label asp-for="Mood" class="form-label">Mood</label>
                        <select asp-for="Mood" class="form-control">
                            <option value="">-- Select Mood --</option>
                            @foreach (var mood in Model.AvailableMoods)
                            {
                                <option value="@mood">@mood</option>
                            }
                        </select>
                    </div>
                </div>
            </div>
            <button type="submit" class="btn btn-primary mt-3">Search</button>
        </form>

        @if (Model.Results?.Any() == true)
        {
            <div class="table-responsive">
                <table class="table table-striped table-dark">
                    <thead>
                        <tr>
                            <th>Title</th>
                            <th>Artist</th>
                            <th>Genre</th>
                            <th>Moods</th>
                            <th>Release Date</th>
                            <th>Add to Playlist</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var song in Model.Results)
                        {
                            <tr>
                                <td>@song.SongTitle</td>
                                <td>@song.ArtistName</td>
                                <td>
                                    @if (song.Genres?.Any() == true)
                                    {
                                        foreach (var genre in song.Genres)
                                        {
                                            <span class="badge bg-primary me-1">@genre.GenreName</span>
                                        }
                                    }
                                </td>
                                <td>
                                    @if (song.Moods?.Any() == true)
                                    {
                                        foreach (var mood in song.Moods)
                                        {
                                            <span class="badge bg-secondary text-dark me-1">@mood.MoodName</span>
                                        }
                                    }
                                </td>
                                <td>@song.DateReleased.ToString()</td>
                                <td>
                                    <button type="button"
                                        class="btn btn-bottom-stripe btn-bottom-stripe--purple add-to-playlist-button"
                                        data-song-id="@song.SongId"
                                        data-song-title="@song.SongTitle"
                                        data-song-artist="@song.ArtistName">
                                        Add
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else if (Model.SearchTerm != null || Model.Genre != null || Model.Mood != null)
        {
            <div class="alert alert-info">
                No songs found matching your search criteria.
            </div>
        }
    </div>
</div>

<div class="playlistContainer">
    <h2>Current Playlist</h2>
    <table id="playlistTable">
        <thead>
            <tr>
                <th>Title</th>
                <th>Artist</th>
            </tr>
        </thead>
        <tbody>

        </tbody>
    </table>

    <button id="savePlaylistBtn">Save Playlist</button>
</div>

<script>
    // 1. We'll keep track of the selected songs in a simple array
    const tempPlaylist = [];

    // 2. Grab all the "Add to playlist" buttons
    const addButtons = document.querySelectorAll('.add-to-playlist-button');

    // 3. The table body where we'll show the current playlist
    const playlistTableBody = document.querySelector('#playlistTable tbody');

    // 4. Attach a click event to each button
    addButtons.forEach(button => {
        button.addEventListener('click', () => {
            const songId = button.getAttribute('data-song-id');
            const title = button.getAttribute('data-song-title');
            const artist = button.getAttribute('data-song-artist');

            // Check if we already have this song in our temp playlist
            const alreadyInPlaylist = tempPlaylist.some(item => item.songId == songId);
            if (!alreadyInPlaylist) {
                // Add to our in-memory array
                tempPlaylist.push({ songId: songId, title: title, artist: artist });

                // Update the DOM: create a new row
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${title}</td>
                    <td>${artist}</td>
                `;
                playlistTableBody.appendChild(row);
            }
        });
    });

    // 5. Handle the “Save Playlist” button
    const savePlaylistBtn = document.getElementById('savePlaylistBtn');
    savePlaylistBtn.addEventListener('click', () => {
        // Optionally prompt for a playlist name, or have a text box on the page
        const playlistName = prompt("Enter a name for your playlist:");
        if (!playlistName) {
            return; // user clicked cancel or empty
        }

        // We'll send the array to the server
        // Build the data payload
        const dataToSend = {
            playlistName: playlistName,
            songs: tempPlaylist // an array of objects: { songId, title, artist }
        };

        // Use fetch to POST this data to your server
        fetch('/Playlist/SaveTempPlaylist', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                // If you use AntiForgery tokens, add them here or remove [ValidateAntiForgeryToken]
            },
            body: JSON.stringify(dataToSend)
        })
        .then(response => {
            if (!response.ok) {
                throw new Error("Error saving playlist");
            }
            return response.json();
        })
        .then(result => {
            alert(`Playlist saved! ID = ${result.playlistId}`);
            // Optionally redirect or clear the temp playlist
            window.location.href = '/Playlist/Details/' + result.playlistId;
        })
        .catch(error => {
            console.error(error);
            alert("Failed to save playlist.");
        });
    });
</script>